function [AA, rr, x] = f_Gauss_Jordan_2(A,r)% Subrotina para resolver um sistema de equacoes algebricas lineares% pelo metodo de Gauss-Jordan % ULTIMA MODIFICACAO: 05/09/2018n=length(r);[nr,nc]=size(A);% Verificacao da matriz A e do vetor rif nr ~= nc    error('Matriz dos coeficientes nao e quadrada.')endif nr ~= n    error('Matriz A e vetor b tem dimensoes diferentes.')end% Verificando se a matriz A e singular (estima o numero de equacees% linearmente independentes)if det(A) == 0    fprintf('\n Rank=%7.3g\n',rank(A))    error('A matriz A e singular.')end% Metodo de Eliminacao de Gauss com Retrossubstituicao% Etapa de eliminacaofor i = 1:n   for j = 1:n      if j ~= i        Mji = A(j,i)/A(i,i);        r(j) = r(j) - Mji*r(i);        A(j,:) = A(j,:)- Mji*A(i,:);      endif    % Fim do if    endfor      % Fim do for jendfor         % Fim do for i      % Etapa de Determinacao Diretafor i = 1:1:n    x(i) = r(i)/A(i,i);endfor  % Fim do for i    % Retorna os valores da Nova Matriz A e do Novo Vetor r  AA = A;  rr = r;